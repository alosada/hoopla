c
response.body
rsponse
c
response.body
response
c
response.body
response
c
url
c
params
c
res
c
response.body
response
c
data
data.to_json
data
response.body
response
c
response.body
c
response.body
response
c
req.headers
req
red
c
response.body
response
response = client.put(relative_url, data.to_json)
c
response.body
response
response = client.put(relative_url, query)
relative_url
query
c
hoopla_client.put(href.gsub('https://api.hoopla.net', ''), data.merge(params))
href.gsub('https://api.hoopla.net', '')
href.gsub('https://api.hoopla.net')
href
hoopla_client.put("/metrics/#{metric_id}/values/#{id}", data.merge(params))
data.merge(params)
params
c
data.merge(params)
params
data
c
data
c
@value.data
@value
r
r.body
r
c
Rack::Utils.build_query( {:a => "a", :b => ["c", "d", "e"]} )
Value.find(params[:id],params[:metric_id])
params
c
params[:user_id]
params
c
Metric.all
Metrics.all
c
Metric.all
Metric
c
@metrics[0].keys
@metrics[0].attributes
@metrics[0].attributes.keys
@metrics[0]
 @metrics = @hoopla_client.get('metrics', method: 'get')
c
@hoopla_client.get('metrics', method: 'get')
@hoopla_client.get('metrics')
@hoopla_client.get 'metrics', nil)
@hoopla_client.get 'metrics', {})
@hoopla_client.get 'metrics'
c
